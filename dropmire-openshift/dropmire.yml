apiVersion: v1
kind: Template
labels:
  app: dropmire
  template: dropmire-psql-persistent
message: 'The dropmire-flask application has been deployed. To access the application via browser you 
  may have to finish the installion by running the following: \n
    oc expose service/dropmire-<podhash> \n
  '

metadata:
  annotations:
    description: A example deployment of Dropmire
    iconClass: icon-python
    openshift.io/display-name: Dropmire
    openshift.io/documentation-url: https://dropmire.readthedocs.io/en/latest/
    openshift.io/long-description: This template deploy dropmire from git
    openshift.io/provider-display-name: OSPO, Red Hat, Inc.
    tags: quickstart,python,dropmire
    template.openshift.io/bindable: 'false'
  name: dropmire
objects:

- apiVersion: v1
  kind: Secret
  metadata:
    name: ${NAME}
  stringData:
    database-password: ${DATABASE_PASSWORD}
    database-user: ${DATABASE_USER}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "postgresql",
        "kind": "Service"}]'
    name: ${NAME}
  spec:
    ports:
    - name: web
      port: 8080
      targetPort: 8080
    selector:
      name: ${NAME}

# - apiVersion: v1
#   kind: Route
#   metadata:
#     name: ${NAME}
#   spec:
#     host: ${APPLICATION_DOMAIN}
#     to:
#       kind: Service
#       name: ${NAME}

- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    name: ${NAME}

- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Defines how to build the application
      template.alpha.openshift.io/wait-for-ready: 'true'
    name: ${NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    source:
      git:
        #ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:${PYTHON_VERSION}
          namespace: ${NAMESPACE}
      type: Source
    triggers:
    - type: ImageChange
    - type: ConfigChange
#     - github:
#         secret: ${GITHUB_WEBHOOK_SECRET}
#       type: GitHub

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: 'true'
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      name: ${NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${NAME}
        name: ${NAME}
      spec:
        containers:
        - env:
          - name: DROPMIRE_SITE_URL
            value: https://${APPLICATION_DOMAIN}
          - name: DROPMIRE_DB_TYPE
            value: postgresql
          - name: DROPMIRE_DB_NAME
            value: ${DATABASE_NAME}
          - name: DROPMIRE_DB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${NAME}
          - name: DROPMIRE_DB_PASS
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${NAME}
          - name: APP_MODULE
            value: app
          - name: MAIL_SERVER
            value: ${MAIL_SERVER}
          image: ' '
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 3
          name: dropmire-psql-persistent
          ports:
          - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 3
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
        initContainers:
        - env:
          - name: DROPMIRE_SITE_URL
            value: https://${APPLICATION_DOMAIN}
          - name: DROPMIRE_DB_TYPE
            value: postgresql
          - name: DROPMIRE_DB_NAME
            value: ${DATABASE_NAME}
          - name: DROPMIRE_DB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${NAME}
          - name: DROPMIRE_DB_PASS
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${NAME}
          - name: APP_MODULE
            value: app
          name: init-database-table
          image: ' '
          imagePullPolicy: Always
          command: ['sh', '-c', 'python createdb.py']
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - dropmire-psql-persistent
        - init-database-table
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
    - type: ConfigChange

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: postgresql
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${POSTGRESQL_VOLUME_CAPACITY}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the database server
    name: postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
      targetPort: 5432
    selector:
      name: postgresql

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the database
      template.alpha.openshift.io/wait-for-ready: 'true'
    name: postgresql
  spec:
    replicas: 1
    selector:
      name: postgresql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: postgresql
        name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${NAME}
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${NAME}
          - name: POSTGRESQL_DATABASE
            value: ${DATABASE_NAME}
          image: ' '
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            initialDelaySeconds: 120
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: ${MEMORY_POSTGRESQL_LIMIT}
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:${POSTGRESQL_VERSION}
          namespace: ${NAMESPACE}
      type: ImageChange
    - type: ConfigChange

parameters:

- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: dropmire

- description: The OpenShift Namespace where the ImageStream resides.
  displayName: Namespace
  name: NAMESPACE
  required: true
  value: openshift

- description: Version of Python image to be used (3.6 or latest).
  displayName: Version of Python Image
  name: PYTHON_VERSION
  required: true
  value: '3.6'

- description: Version of PostgreSQL image to be used (10 or latest).
  displayName: Version of PostgreSQL Image
  name: POSTGRESQL_VERSION
  required: true
  value: '10'

- description: Maximum amount of memory the Django container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi

- description: Maximum amount of memory the PostgreSQL container can use.
  displayName: Memory Limit (PostgreSQL)
  name: MEMORY_POSTGRESQL_LIMIT
  required: true
  value: 512Mi

- description: Volume space available for data, e.g. 512Mi, 2Gi
  displayName: Volume Capacity
  name: POSTGRESQL_VOLUME_CAPACITY
  required: true
  value: 512Mi

- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/jontrossbach/dropmire-flask

# - description: Set this to a branch name, tag or other ref of your repository if you
#     are not using the default branch.
#   displayName: Git Reference
#   name: SOURCE_REPOSITORY_REF

# - description: The exposed hostname that will route to the Django service, if left
#     blank a value will be defaulted.
#   displayName: Application Hostname
#   name: APPLICATION_DOMAIN
#   value: ''

# - description: Github trigger secret.  A difficult to guess string encoded as part
#     of the webhook URL.  Not encrypted.
#   displayName: GitHub Webhook Secret
#   from: '[a-zA-Z0-9]{40}'
#   generate: expression
#   name: GITHUB_WEBHOOK_SECRET

- displayName: Database Name
  name: DATABASE_NAME
  required: true
  value: domain

- displayName: Database Username
  name: DATABASE_USER
  required: true
  value: dropmire

- displayName: Database User Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: DATABASE_PASSWORD

- description: RedHat mail server
  displayName: RedHat mail server
  name: MAIL_SERVER
  required: true
  value: smtp.corp.redhat.com
